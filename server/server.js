const express = require('express');
const fs = require('fs');
const path = require('path');
const config = require('../config.js');

const app = express();

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const configPath = path.resolve(__dirname, '../config.js');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è `authCode` –≤ —Ñ–∞–π–ª–µ `config.js`
const updateAuthCodeInConfig = (authCode) => {
	try {
		// –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ config.js
		let configContent = fs.readFileSync(configPath, 'utf-8');
		// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ `authCode`
		configContent = configContent.replace(
			/authCode: ['"`]?[^'"`,]+['"`]?,/,
			`authCode: '${authCode}',`
		);
		// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
		fs.writeFileSync(configPath, configContent, 'utf-8');
		console.log('‚úÖ authCode —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –≤ config.js');
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ config.js:', error.message);
	}
};

// –õ–æ–≥ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
	console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
	next();
});

// –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç
app.get('/', (req, res) => {
	// –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä `code` –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
	const code = req.query.code;

	if (code) {
		console.log(`–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${code}`);
		updateAuthCodeInConfig(code); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥
		res.send(`–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${code}`);
	} else {
		res.send('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ');
	}
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const startServer = () => {
	app.listen(config.port, () => {
		console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${config.port}`);
	});
};

module.exports = startServer;

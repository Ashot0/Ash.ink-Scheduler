const axios = require('axios');
const fs = require('fs');
const path = require('path');
const configPath = path.resolve(__dirname, '../config.js'); // –ü—É—Ç—å –∫ config.js
let config = require(configPath); // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ñ–∏–≥
const getAccessToken = require('../testPinterestAuth');

async function refreshPinterestToken() {
	const { refreshToken, clientId, clientSecret } = config.pinterest;

	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Base64 –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization
	const base64Auth = Buffer.from(`${clientId}:${clientSecret}`).toString(
		'base64'
	);

	try {
		console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Pinterest —Ç–æ–∫–µ–Ω–∞...');

		// –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
		const response = await axios.post(
			'https://api.pinterest.com/v5/oauth/token',
			new URLSearchParams({
				grant_type: 'refresh_token',
				refresh_token: refreshToken,
			}).toString(),
			{
				headers: {
					Authorization: `Basic ${base64Auth}`,
					'Content-Type': 'application/x-www-form-urlencoded',
				},
			}
		);

		const newAccessToken = response.data.access_token;
		console.log('‚úÖ –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω Pinterest –ø–æ–ª—É—á–µ–Ω:', newAccessToken);

		// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ
		config.pinterest.token = newAccessToken;
		const configString = `module.exports = ${JSON.stringify(config, null, 2)};`;
		fs.writeFileSync(configPath, configString, 'utf-8');
		console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω –≤ config.js.');

		return true;
	} catch (error) {
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:',
			error.response?.data || error.message
		);
		getAccessToken();
		return true;
	}
}

async function testPinterestToken() {
	const url = 'https://api.pinterest.com/v5/user_account'; // –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞

	try {
		console.log('–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è Pinterest —Ç–æ–∫–µ–Ω–∞...');

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω
		const response = await axios.get(url, {
			headers: {
				Authorization: `Bearer ${config.pinterest.token}`,
			},
		});
		console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –í–∞—à user_id:', response.data.id);

		return true;
	} catch (error) {
		// –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç—ë–∫ (401 Unauthorized), –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
		if (error.response?.status === 401) {
			console.error('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
			return await refreshPinterestToken();
		}

		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
		console.error(
			'‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:',
			error.response?.data || error.message
		);
		return false;
	}
}

module.exports = {
	testPinterestToken,
};

const axios = require('axios');
const path = require('path');
const fs = require('fs');
let config = require('../config');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
function reloadConfig() {
	try {
		delete require.cache[require.resolve('../config')];
		config = require('../config');
		console.log('üîÑ –ö–æ–Ω—Ñ–∏–≥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω. –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω:', config.pinterest.token);
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥–∞:', error.message);
	}
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Axios
const axiosInstance = axios.create({
	baseURL: 'https://api.pinterest.com/v5/',
});

let lastToken = config.pinterest.token;

axiosInstance.interceptors.request.use((requestConfig) => {
	if (config.pinterest.token !== lastToken) {
		reloadConfig();
		lastToken = config.pinterest.token;
	}
	requestConfig.headers.Authorization = `Bearer ${config.pinterest.token}`;
	return requestConfig;
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å–æ–∫
 */
async function fetchBoards() {
	try {
		const response = await axiosInstance.get('boards');
		console.log(response.data);
		return response.data.items || [];
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–æ—Å–æ–∫:', getErrorMessage(error));
		return [];
	}
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∏–Ω–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –¥–æ—Å–∫–∏
 */
async function fetchPinsFromBoard(boardId, bookmark = null) {
	const params = bookmark ? { bookmark } : {};

	try {
		const response = await axiosInstance.get(`boards/${boardId}/pins`, {
			params,
		});
		const newBookmark = response.data.bookmark || null;
		return { items: response.data.items || [], bookmark: newBookmark };
	} catch (error) {
		console.error(
			`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–∏–Ω–æ–≤ —Å –¥–æ—Å–∫–∏ ${boardId}:`,
			getErrorMessage(error)
		);
		return { items: [], bookmark: null };
	}
}

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–¥–æ–±–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
 */
function getErrorMessage(error) {
	if (error.response) {
		// –û—à–∏–±–∫–∞ –æ—Ç Pinterest API
		return error.response.data || error.response.statusText;
	} else if (error.request) {
		// –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
		return '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞';
	} else {
		// –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
		return error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
	}
}

module.exports = { fetchBoards, fetchPinsFromBoard };
